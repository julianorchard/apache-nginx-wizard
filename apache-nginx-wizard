#!/usr/bin/env python3

# Name:        apache-nginx-wizard
# By:          Julian Orchard <hello@julianorchard.co.uk>
# Tag Added:   10/03/2022
# Description: Configuration Wizard for Apache and Nginx URL's.

import getpass
import os
import pwd
import sys

HOME_BASE_DIR = "/home"
NGINX_PATH = "/etc/nginx"
SITES_AVAILABLE_PATH = "/sites-available"
SITE_BASE_DIR = "/var/www"
WIZARD_PATH = os.path.dirname(os.path.abspath(__file__))


def make_sym_link(site_dir,uid,home_dir,site_url):
    print(f"Creating a shortcut to directory in {home_dir}...")
    os.symlink(site_dir,home_dir + site_url)
    os.chown(home_dir + site_url,uid,uid)

def create_var_dir(site_dir,uid):
    if not os.path.exists(site_dir):
        print(f"Creating directory at {site_dir}...")
        os.mkdir(site_dir)
        os.chown(site_dir,uid,uid)
        os.chmod(site_dir,755)
        return True
    else:
        print(f"A directory of this name ({site_dir}) already exists. Please try again, or edit the current configuration.")
        return False

def is_user_root():
    return getpass.getuser() == "root"

def is_ssl():
    while "Please answer y or n.":
        decide_ssl = input("Would you like this setup to use the Nginx SSL configuration file? (y/n) ").lower()
        if decide_ssl == "y" or decide_ssl == "yes":
            return True
        elif decide_ssl == "n" or decide_ssl == "no":
            return False

def create_config(nginx_template_file,site_url,nginx_file):
    print("Moving Nginx template file into position with new details...")
    with open(nginx_template_file, "rt") as nginx_temp:
        with open(nginx_file, "wt") as nginx_new:
            for line in nginx_temp:
                nginx_new.write(line.replace('your_domain',site_url))
    print("Creating link from /sites-available/ to /sites-enabled/...")
    os.symlink(nginx_file,f"/etc/nginx/sites-enabled/{site_url}")
    return



def main():
# User Details (needs to be run as root)
    if not is_user_root():
        print("This command needs to be run with sudo.")
        sys.exit()
    username = input("Please enter your user account username: ")
    uid = pwd.getpwnam(username).pw_uid
# Site URL Details
    site_url = input("Please enter the site URL: ")
    site_url = site_url.replace("www.","") # we don't want a www. URL
    site_dir = f"{SITE_BASE_DIR}/{site_url}"
    home_dir = f"{HOME_BASE_DIR}/{username}/"
# Nginx Location Details
    nginx_file = f"{NGINX_PATH}{SITES_AVAILABLE_PATH}/{site_url}"

# Creating SITE_BASE_DIR directories
    if not create_var_dir(site_dir,uid):
       sys.exit()

# Make SymLink in Home Directory
    make_sym_link(site_dir,uid,home_dir,site_url)

# Copy and configure Nginx files in /etc/nginx/sites-available, etc.
    if is_ssl():
        nginx_template_file = f"{WIZARD_PATH}/nginx/template-ssl.nginx"
    else:
        nginx_template_file = f"{WIZARD_PATH}/nginx/template.nginx"

    create_config(nginx_template_file,site_url,nginx_file)

    print("Don't forget to refresh nginx, with 'service nginx reload'!")

if __name__ == '__main__':
    main()
